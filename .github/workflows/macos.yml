name: Testbuild for MacOS
run-name: testbuild_macos
on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:
    types:
      - edited
      - opened
      - synchronize
concurrency:
  # Cancel concurrent workflows for the same PR or commit hash.
  group: ${{github.workflow}}-${{github.event_name == 'pull_request' && github.head_ref || github.sha}}
  cancel-in-progress: true
jobs:
  build_macos_aarch64:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - env: ubuntu
    steps:
    # I think no build dependencies are needed, cmake should already be installed
    #- name: Install build dependencies
    #  run: |
    #    sudo apt update
    #    sudo apt install cmake ninja-build libwayland-dev libxkbcommon-dev xorg-dev libdbus-1-dev
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Build
      run: |
        mkdir build
        cmake -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.7 -S src/ -B build/
        cmake --build build
    - name: Create testbuild package
      run: |
        # Create release directory tree
        export PKGDIR="texview-macos-$(git rev-parse --short HEAD)"
        echo "pkgname=$PKGDIR" >> $GITHUB_ENV
        mkdir -p publish/$PKGDIR
        # Copy release assets
        cd build
        cp texview ../publish/$PKGDIR/
        cd ..
        # Copy misc assets
        echo "texview for macOS, built $(date)" > publish/$PKGDIR/README.txt
        echo -e "from ${{ github.ref_name }} commit ${{ github.sha }}\n" >> publish/$PKGDIR/README.txt
        echo -e "!! Most probably useless for users, because it's not notarized !!\n" >> publish/$PKGDIR/README.txt
        echo -e "This build exists to make sure it still builds on macOS at all\n" >> publish/$PKGDIR/README.txt
        cat README.md >> publish/$PKGDIR/README.txt
        cp Licenses.txt publish/$PKGDIR/
    - name: Upload testbuild package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.pkgname }}
        path: publish/
        if-no-files-found: error
